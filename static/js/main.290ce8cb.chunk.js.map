{"version":3,"sources":["images/platziconf-logo.svg","images/badge-header.svg","images/twitter.svg","images/astronauts.svg","images/logo.svg","serviceWorker.js","components/Gravatar.js","components/BadgesList.js","components/Loader.js","api.js","components/PageError.js","pages/Badges.js","components/Badge.js","components/BadgeForm.js","pages/BadgeNew.js","components/Modal.js","components/DeleteBadgeModal.js","pages/BadgeDetails.js","pages/BadgeDetailsContainer.js","pages/BadgeEdit.js","pages/Home.js","pages/NotFound.js","components/Navbar.js","components/Layout.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Gravatar","props","email","hash","md5","className","src","alt","BadgesList","badges","React","useState","query","setQuery","filteredBadges","setFilteredBadges","useMemo","result","filter","badge","Object","keys","toLowerCase","includes","useSearchBadges","length","Fragment","type","value","onChange","e","target","to","map","key","id","firstName","lastName","width","height","twitterLogo","twitter","jobTitle","Loader","role","BASE_URL","delay","ms","Promise","resolve","setTimeout","randomNumber","min","max","Math","floor","random","simulateNetworkLatency","callApi","endpoint","a","async","options","headers","Accept","url","fetch","response","json","data","api","list","create","method","body","JSON","stringify","read","badgeId","update","updates","remove","PageError","aria-label","error","message","Badges","fetchData","setState","loading","state","this","interval","setInterval","clearInterval","confLogo","Component","Badge","BadgeForm","handleClick","handleSubmit","preventDefault","onSubmit","name","formValues","onClick","BadgeNew","form","avatarUrl","handleChange","history","push","header","Modal","isOpen","ReactDOM","createPortal","onClose","children","document","getElementById","DeleteBadgeModal","modalIsOpen","onCloseModal","onDeleteBadge","BadgeDetails","onOpenModal","BadgeDetailsContainer","undefined","params","handleDeleteBadge","handleModal","BadgeEdit","Home","platziConf","astronauts","NotFound","Navbar","logo","Layout","App","exact","path","component","from","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.290ce8cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/platziconf-logo.f246f5f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/badge-header.973f5842.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.182d5ef4.svg\";","module.exports = __webpack_public_path__ + \"static/media/astronauts.71addf45.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.0026b862.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport md5 from 'md5';\r\n\r\nconst Gravatar = (props) => {\r\n    const email = props.email;\r\n    const hash = md5(email);\r\n\r\n    return (\r\n        <img className={props.className} src={`https://www.gravatar.com/avatar/${hash}?d=identicon`} alt=\"Avatar\" />\r\n    )\r\n}\r\n\r\nexport default Gravatar;","import React from 'react'\r\nimport './styles/BadgesList.css'\r\nimport twitterLogo from '../images/twitter.svg';\r\nimport { Link } from 'react-router-dom';\r\nimport Gravatar from '../components/Gravatar'\r\n\r\nfunction useSearchBadges(badges) {\r\n    const [query, setQuery] = React.useState('');\r\n    const [filteredBadges, setFilteredBadges] = React.useState(badges);\r\n\r\n    React.useMemo(() => {\r\n        const result = badges.filter(badge => {\r\n            for (const key of Object.keys(badge)) {\r\n                if (badge[key].toLowerCase().includes(query.toLowerCase())) {\r\n                    return badge;\r\n                }\r\n            }\r\n        });\r\n\r\n        setFilteredBadges(result);\r\n    }, [badges, query]);\r\n\r\n    return { query, setQuery, filteredBadges };\r\n}\r\n\r\n\r\nconst BadgesList = (props) => {\r\n\r\n    const { query, setQuery, filteredBadges } = useSearchBadges(props.badges);\r\n    if (filteredBadges.length === 0) {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"form-group\">\r\n                    <label>Filter Badges</label>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        value={query}\r\n                        onChange={(e) => {\r\n                            setQuery(e.target.value)\r\n                        }}\r\n                    />\r\n                </div>\r\n                <h3>Badges not found</h3>\r\n                <Link to=\"/badges/new\" className=\"btn btn-primary\">Create new badge</Link>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"Badges__list\">\r\n            <div className=\"form-group\">\r\n                <label>Filter Badges</label>\r\n                <input type=\"text\" className=\"form-control\"\r\n                    value={query}\r\n                    onChange={(e) => {\r\n                        setQuery(e.target.value)\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"Badges__container\">\r\n                <ul className=\"list-unstyled\">\r\n                    {filteredBadges.map((badge) => {\r\n                        return (\r\n                            <li key={badge.id} className=\"BadgesListItem\">\r\n                                <Link className=\"text-reset text-decoration-none w-100\" to={`/badges/${badge.id}`} >\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            <Gravatar className=\"BadgesListItem__avatar\" email={badge.email} />\r\n                                            {/* <img src={badge.avatarUrl} className=\"BadgesListItem__avatar\" alt=\"ava tar\" />*/}\r\n                                        </div>\r\n                                        <div className=\"col-9\">\r\n                                            <b>{badge.firstName} {badge.lastName}</b>< br />\r\n                                            <img width=\"20\" height=\"20\" src={twitterLogo} alt=\"twitter\" /><span className=\"twitter-color\">@{badge.twitter}</span>< br />\r\n                                            <small>{badge.jobTitle}</small>\r\n                                        </div>\r\n                                    </div>\r\n                                </Link>\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgesList;","import React from 'react';\r\nimport './styles/Loader.css';\r\n\r\nconst Loader = () => {\r\n    /* const children = props.children; */\r\n    return (\r\n        <div className=\"d-flex justify-content-center align-items-center loader\">\r\n            <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-secondary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-success\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-light\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-dark\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","const BASE_URL = 'http://localhost:3001';\r\n\r\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\r\nconst randomNumber = (min = 0, max = 1) =>\r\n  Math.floor(Math.random() * (max - min + 1)) + min;\r\nconst simulateNetworkLatency = (min = 30, max = 1500) =>\r\n  delay(randomNumber(min, max));\r\n\r\nasync function callApi(endpoint, options = {}) {\r\n  await simulateNetworkLatency();\r\n\r\n  options.headers = {\r\n    'Content-Type': 'application/json',\r\n    Accept: 'application/json',\r\n  };\r\n\r\n  const url = BASE_URL + endpoint;\r\n  const response = await fetch(url, options);\r\n  const data = await response.json();\r\n\r\n  return data;\r\n}\r\n\r\nconst api = {\r\n  badges: {\r\n    list() {\r\n      return callApi('/badges');\r\n    },\r\n    create(badge) {\r\n      /* throw new Error('500:Server Error')   */\r\n      return callApi(`/badges`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(badge),\r\n      });\r\n    },\r\n    read(badgeId) {\r\n      return callApi(`/badges/${badgeId}`);\r\n    },\r\n    update(badgeId, updates) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(updates),\r\n      });\r\n    },\r\n    // Lo hubiera llamado `delete`, pero `delete` es un keyword en JavaScript asi que no es buena idea :P\r\n    remove(badgeId) {\r\n      return callApi(`/badges/${badgeId}`, {\r\n        method: 'DELETE',\r\n      });\r\n    },\r\n  },\r\n};\r\n\r\nexport default api;","import React from 'react';\r\nimport './styles/PageError.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PageError = (props) => {\r\n    return (\r\n        <div className=\"PageError\">\r\n            <span role=\"img\" aria-label=\"error\">{props.error.message}❌</span>\r\n            <Link to=\"/badges\">\r\n                Go to badges list\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageError;","import React from 'react'\r\nimport './styles/Badges.css';\r\nimport confLogo from '../images/badge-header.svg'\r\nimport BadgesList from '../components/BadgesList';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../components/Loader';\r\nimport api from '../api';\r\nimport PageError from '../components/PageError';\r\nclass Badges extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: null,\r\n            loading: true,\r\n            error: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n        this.interval = setInterval(this.fetchData, 5000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    fetchData = async () => {\r\n        this.setState({\r\n            loading: true,\r\n            error: null\r\n        })\r\n        try {\r\n            const response = await api.badges.list();\r\n            this.setState({\r\n                data: response,\r\n                loading: false,\r\n            })\r\n        } catch (e) {\r\n            this.setState({\r\n                loading: false,\r\n                error: e\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {(this.state.data && this.state.data.length > 0) &&\r\n                    <div>\r\n                        <div className=\"Badges\">\r\n                            <div className=\"Badges__hero\">\r\n                                <div className=\"Badges__container\">\r\n                                    <img className=\"Badges_conf-logo\" src={confLogo} alt=\"logo\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Badges__container\">\r\n\r\n                            <React.Fragment>\r\n                                <div className=\"Badges__buttons\">\r\n                                    <Link to=\"/badges/new\" className=\"btn btn-primary\">New Badge</Link>\r\n                                </div>\r\n                                <BadgesList badges={this.state.data} />\r\n                            </React.Fragment>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n                {(this.state.loading && !this.state.data) && (\r\n                    <Loader />\r\n                )}\r\n                {this.state.error && (\r\n                    <PageError error={this.state.error} />\r\n                )}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Badges;","import React from 'react';\r\nimport \"./styles/Badge.css\";\r\nimport confLogo from '../images/badge-header.svg';\r\nimport Gravatar from './Gravatar';\r\nclass Badge extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Badge\">\r\n                <div className=\"Badge__header\">\r\n                    <img src={confLogo} alt=\"\" />\r\n                </div>\r\n                <div className=\"Badge__section-name\">\r\n                    <Gravatar className=\"Badge__avatar\" email={this.props.email}/>\r\n                    <h1>{this.props.firstName} <br /> {this.props.lastName}</h1>\r\n                </div>\r\n                <div className=\"Badge__section-info\">\r\n                    <h3>{this.props.jobTitle}</h3>\r\n                    <div>@{this.props.twitter}</div>\r\n                </div>\r\n                <div className=\"Badge__footer\">\r\n                    #platziconf\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Badge;\r\n","import React from 'react';\r\n\r\nclass BadgeForm extends React.Component {\r\n\r\n    handleClick = e => {\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                \r\n                <form onSubmit={this.props.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>First Name</label>\r\n                        <input\r\n                            onChange={this.props.onChange}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            value={this.props.formValues.firstName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Last Name</label>\r\n                        <input\r\n                            onChange={this.props.onChange}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            value={this.props.formValues.lastName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input\r\n                            onChange={this.props.onChange}\r\n                            className=\"form-control\"\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            value={this.props.formValues.email}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Job Title</label>\r\n                        <input\r\n                            onChange={this.props.onChange}\r\n                            className=\"form-control\"\r\n                            type=\"text\"\r\n                            name=\"jobTitle\"\r\n                            value={this.props.formValues.jobTitle}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Twitter</label>\r\n                        <input onChange={this.props.onChange} className=\"form-control\" type=\"text\" name=\"twitter\" />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center mb-3\">\r\n                        <button type=\"submit\" onClick={this.handleClick} className=\"btn btn-primary\">Save</button>\r\n                    </div>\r\n\r\n                    {this.props.error && (\r\n                        <p className=\"text-danger\">{this.props.error.message}</p>\r\n                    )}\r\n                </form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BadgeForm;","import React from 'react';\r\nimport header from '../images/platziconf-logo.svg';\r\nimport './styles/BadgeNew.css';\r\nimport Badge from '../components/Badge';\r\nimport BadgeForm from '../components/BadgeForm';\r\nimport api from '../api';\r\nimport Loader from '../components/Loader';\r\nimport PageError from '../components/PageError';\r\nclass BadgeNew extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        error: null,\r\n        form: {\r\n            firstName: 'Gleycer',\r\n            lastName: 'Parra',\r\n            email: 'gleycerparra@gmail.com',\r\n            jobTitle: 'Javascript Fullstack Developer',\r\n            twitter: 'gleycerparra',\r\n            avatarUrl: 'https://www.gravatar.com/avatar/402320a069647b54726603ea54bd8e13'\r\n        }\r\n    };\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true, error: null })\r\n        try {\r\n            await api.badges.create(this.state.form);\r\n            this.setState({ loading: false })\r\n\r\n            this.props.history.push('/badges');\r\n        } catch (e) {\r\n            this.setState({ loading: false, error: e })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"BadgeNew__hero\">\r\n                <img className=\"BadgeNew__hero-image img-fluid\" src={header} alt=\"header\" />\r\n            </div>\r\n            {(!this.state.loading) && (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <Badge\r\n                                firstName={this.state.form.firstName}\r\n                                lastName={this.state.form.lastName}\r\n                                email={this.state.form.email}\r\n                                jobTitle={this.state.form.jobTitle}\r\n                                twitter={this.state.form.twitter}\r\n                                avatarUrl={this.state.form.avatarUrl}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h1>New Attendant</h1>\r\n                            <BadgeForm\r\n                                onChange={this.handleChange}\r\n                                formValues={this.state.form}\r\n                                onSubmit={this.handleSubmit}\r\n                                error={this.state.error}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {this.state.loading && (\r\n                <Loader />\r\n            )}\r\n            {this.state.error && (\r\n                <PageError error={this.state.error} />\r\n            )}\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default BadgeNew;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/Modal.css';\r\n\r\nconst Modal = (props) => {\r\n    if (!props.isOpen) {\r\n        return null;\r\n    }\r\n    return (\r\n        ReactDOM.createPortal(\r\n            <div className=\"Modal\">\r\n                <div className=\"Modal__container\">\r\n                    <button onClick={props.onClose} className=\"Modal__close-button\">\r\n                        X\r\n                    </button>\r\n                    {props.children}\r\n                </div>\r\n            </div>,\r\n            document.getElementById('modal'))\r\n    )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport Modal from './Modal';\r\nimport './styles/DeleteBadgeModal.css';\r\n\r\nconst DeleteBadgeModal = (props) => {\r\n    return (<Modal\r\n        isOpen={props.modalIsOpen}\r\n        onClose={props.onCloseModal}>\r\n        <div className=\"DeleteBadgeModal\">\r\n            <h1>Are you sure?</h1>\r\n            <p>You are about to delete this badge.</p>\r\n            <div>\r\n                <button onClick={props.onDeleteBadge} className=\"btn btn-danger mr-3\">Delete</button>\r\n                <button onClick={props.onCloseModal} className=\"btn btn-primary\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </Modal>)\r\n}\r\n\r\nexport default DeleteBadgeModal;","import React from 'react';\r\nimport confLogo from '../images/platziconf-logo.svg'\r\nimport './styles/BadgeDetails.css';\r\nimport Badge from '../components/Badge';\r\nimport { Link } from 'react-router-dom';\r\nimport DeleteBadgeModal from '../components/DeleteBadgeModal';\r\n\r\nconst BadgeDetails = (props) => {\r\n    return (\r\n        <div>\r\n            <React.Fragment>\r\n                <div className=\"BadgeDetails__hero\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6 text-center\">\r\n                                <img src={confLogo} alt=\"logo\" />\r\n                            </div>\r\n                            <div className=\"col-6 text-center BadgeDetails__hero-attendant-name\">\r\n                                <h1>\r\n                                    {props.badge.firstName} {props.badge.lastName}\r\n                                </h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <Badge\r\n                                firstName={props.badge.firstName}\r\n                                lastName={props.badge.lastName}\r\n                                email={props.badge.email}\r\n                                jobTitle={props.badge.jobTitle}\r\n                                twitter={props.badge.twitter}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h2>Actions</h2>\r\n                            <div>\r\n                                <div>\r\n                                    <Link className=\"btn btn-primary mb-3\" to={`/badges/${props.badge.id}/edit`} >Edit</Link>\r\n                                </div>\r\n                                <div>\r\n                                    <button onClick={props.onOpenModal} className=\"btn btn-danger\">Delete</button>\r\n                                    <DeleteBadgeModal\r\n                                        onDeleteBadge={props.onDeleteBadge}\r\n                                        modalIsOpen={props.modalIsOpen}\r\n                                        onCloseModal={props.onCloseModal} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BadgeDetails;","import React from 'react';\r\n\r\nimport api from '../api';\r\nimport BadgeDetails from './BadgeDetails';\r\nimport Loader from '../components/Loader';\r\nimport PageError from '../components/PageError';\r\n\r\n\r\nclass BadgeDetailsContainer extends React.Component {\r\n    state = {\r\n        loading: true,\r\n        error: null,\r\n        data: undefined,\r\n        modalIsOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    fetchData = async () => {\r\n        this.setState({\r\n            loading: true,\r\n            error: null\r\n        });\r\n\r\n        try {\r\n            const data = await api.badges.read(this.props.match.params.id);\r\n            this.setState({\r\n                loading: false,\r\n                data: data\r\n            })\r\n        } catch (e) {\r\n            this.setState({\r\n                loading: false,\r\n                error: e\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDeleteBadge = async e => {\r\n        this.setState({\r\n            modalIsOpen: false,\r\n            loading: true,\r\n            error: null\r\n        });\r\n\r\n        try {\r\n            await api.badges.remove(this.props.match.params.id);\r\n            this.setState({\r\n                loading: false\r\n            })\r\n            this.props.history.push('/badges');\r\n        } catch (e) {\r\n            this.setState({\r\n                loading: false,\r\n                error: e\r\n            })\r\n        }\r\n    }\r\n\r\n    handleModal = e => {\r\n        this.setState({ modalIsOpen: !this.state.modalIsOpen })\r\n    }\r\n\r\n    render() {\r\n        const badge = this.state.data;\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.loading && (\r\n                    <Loader />\r\n                )}\r\n                {this.state.error && (\r\n                    <PageError error={this.state.error} />\r\n                )}\r\n\r\n                {(this.state.data && !this.state.loading) && (\r\n                    <BadgeDetails\r\n                        onDeleteBadge={this.handleDeleteBadge}\r\n                        onOpenModal={this.handleModal} \r\n                        onCloseModal={this.handleModal}\r\n                        modalIsOpen={this.state.modalIsOpen}\r\n                        badge={badge} \r\n                        />\r\n                )}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BadgeDetailsContainer;","import React from 'react';\r\nimport header from '../images/platziconf-logo.svg';\r\nimport './styles/BadgeEdit.css';\r\nimport Badge from '../components/Badge';\r\nimport BadgeForm from '../components/BadgeForm';\r\nimport api from '../api';\r\nimport Loader from '../components/Loader';\r\n\r\nclass BadgeEdit extends React.Component {\r\n    state = {\r\n        loading: false,\r\n        error: null,\r\n        form: {\r\n            firstName: 'Gleycer',\r\n            lastName: 'Parra',\r\n            email: 'gleycerparra@gmail.com',\r\n            jobTitle: 'Javascript Fullstack Developer',\r\n            twitter: 'gleycerparra',\r\n            avatarUrl: 'https://www.gravatar.com/avatar/402320a069647b54726603ea54bd8e13'\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchData();\r\n    }\r\n\r\n    fetchData = async e => {\r\n        this.setState(\r\n            {\r\n                loading: true,\r\n                error: null\r\n            });\r\n        try {\r\n            const data = await api.badges.read(this.props.match.params.id);\r\n            this.setState(\r\n                {\r\n                    loading: false, form: data\r\n                })\r\n        } catch (e) {\r\n            this.setState(\r\n                {\r\n                    loading: false, error: e\r\n                })\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit = async e => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true, error: null })\r\n        try {\r\n            await api.badges.update(this.props.match.params.id, this.state.form);\r\n            this.setState({ loading: false })\r\n\r\n            this.props.history.push('/badges');\r\n        } catch (e) {\r\n            this.setState({ loading: false, error: e })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            <div className=\"BadgeEdit__hero\">\r\n                <img className=\"BadgeEdit__hero-image img-fluid\" src={header} alt=\"header\" />\r\n            </div>\r\n            {(!this.state.loading) && (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <Badge\r\n                                firstName={this.state.form.firstName}\r\n                                lastName={this.state.form.lastName}\r\n                                email={this.state.form.email}\r\n                                jobTitle={this.state.form.jobTitle}\r\n                                twitter={this.state.form.twitter}\r\n                                avatarUrl={this.state.form.avatarUrl}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <h1>Edit Attendant</h1>\r\n                            <BadgeForm\r\n                                onChange={this.handleChange}\r\n                                formValues={this.state.form}\r\n                                onSubmit={this.handleSubmit}\r\n                                error={this.state.error}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {this.state.loading && (\r\n                <Loader />\r\n            )}\r\n            {/* {this.state.error && (\r\n                <PageError error={this.state.error} />\r\n            )} */}\r\n        </React.Fragment>\r\n    }\r\n}\r\n\r\nexport default BadgeEdit;","import React from 'react';\r\nimport './styles/Home.css';\r\nimport astronauts from '../images/astronauts.svg'\r\nimport platziConf from '../images/platziconf-logo.svg'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"col-6 Home__col\">\r\n                <img src={platziConf} alt=\"platzi-conf\" />\r\n                <h1>PRINT YOUR BADGES</h1>\r\n                <h4>The easiest way to manage your\r\nconference</h4>\r\n                <Link to=\"/badges\">\r\n                    <h5>Go to Badges List</h5>\r\n                </Link>\r\n            </div>\r\n            <div className=\"col-6 Home__col\">\r\n                <img width=\"80%\" src={astronauts} alt=\"astronauts\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction NotFound() {\r\n    return <h1>404 NOT FOUND</h1>\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport logo from '../images/logo.svg';\r\nimport \"./styles/Navbar.css\";\r\nimport { Link } from 'react-router-dom';\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"Navbar\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"Navbar__brand\" to=\"/badges\">\r\n                        <img className=\"Navbar__brand-logo\" src={logo} alt=\"logo\" />\r\n                        <span className=\"font-weight-light\">Platzi</span>\r\n                        <span className=\"font-weight-bold\">Conf</span>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport Navbar from './Navbar';\r\n\r\nconst Layout = (props) => {\r\n    /* const children = props.children; */\r\n    return (\r\n        <React.Fragment>\r\n            <Navbar />\r\n            {props.children}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport Badges from './pages/Badges';\r\nimport BadgeNew from './pages/BadgeNew';\r\nimport BadgeDetailsContainer from './pages/BadgeDetailsContainer';\r\nimport BadgeEdit from './pages/BadgeEdit';\r\nimport Home from './pages/Home';\r\nimport NotFound from './pages/NotFound';\r\nimport Layout from './components/Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path=\"/badges\" component={Badges} />\r\n          <Route exact path=\"/badges/new\" component={BadgeNew} />\r\n          <Route exact path=\"/badges/:id/edit\" component={BadgeEdit} />\r\n          <Route exact path=\"/badges/:id/\" component={BadgeDetailsContainer} />\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/404\" component={NotFound} />\r\n          <Redirect from=\"*\" to=\"/404\" />\r\n        </Switch>\r\n      </Layout>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './global.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n/* import Badge from './components/Badge'; */\n/* import BadgeNew from './pages/BadgeNew'; */\n/* import Badges from './pages/Badges'; */\n\n// eslint-disable-next-line react/jsx-no-undef\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}